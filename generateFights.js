var generateFights = "var applySkillModifiers = (brute, skill) => {\n    var updatedBrute = { ...brute };\n    // Vitality modifier\n    if (skill === 'vitality') {\n        updatedBrute.enduranceModifier *= 1.5;\n        updatedBrute.enduranceStat += 3;\n    }\n    // Immortality modifier\n    if (skill === 'immortality') {\n        updatedBrute.enduranceModifier *= 3.5;\n        updatedBrute.strengthModifier *= 0.75;\n        updatedBrute.agilityModifier *= 0.75;\n        updatedBrute.speedModifier *= 0.75;\n    }\n    // Herculean strength modifier\n    if (skill === 'herculeanStrength') {\n        updatedBrute.strengthModifier *= 1.5;\n        updatedBrute.strengthStat += 3;\n    }\n    // Feline agility modifier\n    if (skill === 'felineAgility') {\n        updatedBrute.agilityModifier *= 1.5;\n        updatedBrute.agilityStat += 3;\n    }\n    // Lightning bolt modifier\n    if (skill === 'lightningBolt') {\n        updatedBrute.speedModifier *= 1.5;\n        updatedBrute.speedStat += 3;\n    }\n    // Reconnaissance modifier\n    if (skill === 'reconnaissance') {\n        updatedBrute.speedModifier *= 2.5;\n        updatedBrute.speedStat += 5;\n    }\n    // Armor modifier\n    if (skill === 'armor') {\n        updatedBrute.speedModifier *= 0.9;\n    }\n    return updatedBrute;\n};\nvar WeaponName = /*exports.*//*$Enums.*/WeaponName = {\n  fan: 'fan',\n  keyboard: 'keyboard',\n  knife: 'knife',\n  leek: 'leek',\n  mug: 'mug',\n  sai: 'sai',\n  racquet: 'racquet',\n  axe: 'axe',\n  bumps: 'bumps',\n  flail: 'flail',\n  fryingPan: 'fryingPan',\n  hatchet: 'hatchet',\n  mammothBone: 'mammothBone',\n  morningStar: 'morningStar',\n  trombone: 'trombone',\n  baton: 'baton',\n  halbard: 'halbard',\n  lance: 'lance',\n  trident: 'trident',\n  whip: 'whip',\n  noodleBowl: 'noodleBowl',\n  piopio: 'piopio',\n  shuriken: 'shuriken',\n  broadsword: 'broadsword',\n  scimitar: 'scimitar',\n  sword: 'sword'\n};\nvar WeaponId;\n(function (WeaponId) {\n    WeaponId[WeaponId[\"fan\"] = 0] = \"fan\";\n    WeaponId[WeaponId[\"keyboard\"] = 1] = \"keyboard\";\n    WeaponId[WeaponId[\"knife\"] = 2] = \"knife\";\n    WeaponId[WeaponId[\"leek\"] = 3] = \"leek\";\n    WeaponId[WeaponId[\"mug\"] = 4] = \"mug\";\n    WeaponId[WeaponId[\"sai\"] = 5] = \"sai\";\n    WeaponId[WeaponId[\"racquet\"] = 6] = \"racquet\";\n    WeaponId[WeaponId[\"axe\"] = 7] = \"axe\";\n    WeaponId[WeaponId[\"bumps\"] = 8] = \"bumps\";\n    WeaponId[WeaponId[\"flail\"] = 9] = \"flail\";\n    WeaponId[WeaponId[\"fryingPan\"] = 10] = \"fryingPan\";\n    WeaponId[WeaponId[\"hatchet\"] = 11] = \"hatchet\";\n    WeaponId[WeaponId[\"mammothBone\"] = 12] = \"mammothBone\";\n    WeaponId[WeaponId[\"morningStar\"] = 13] = \"morningStar\";\n    WeaponId[WeaponId[\"trombone\"] = 14] = \"trombone\";\n    WeaponId[WeaponId[\"baton\"] = 15] = \"baton\";\n    WeaponId[WeaponId[\"halbard\"] = 16] = \"halbard\";\n    WeaponId[WeaponId[\"lance\"] = 17] = \"lance\";\n    WeaponId[WeaponId[\"trident\"] = 18] = \"trident\";\n    WeaponId[WeaponId[\"whip\"] = 19] = \"whip\";\n    WeaponId[WeaponId[\"noodleBowl\"] = 20] = \"noodleBowl\";\n    WeaponId[WeaponId[\"piopio\"] = 21] = \"piopio\";\n    WeaponId[WeaponId[\"shuriken\"] = 22] = \"shuriken\";\n    WeaponId[WeaponId[\"broadsword\"] = 23] = \"broadsword\";\n    WeaponId[WeaponId[\"scimitar\"] = 24] = \"scimitar\";\n    WeaponId[WeaponId[\"sword\"] = 25] = \"sword\";\n})(WeaponId || (/*exports.*/WeaponId = WeaponId = {}));\nvar WeaponByName = {\n    [WeaponName.fan]: WeaponId.fan,\n    [WeaponName.keyboard]: WeaponId.keyboard,\n    [WeaponName.knife]: WeaponId.knife,\n    [WeaponName.leek]: WeaponId.leek,\n    [WeaponName.mug]: WeaponId.mug,\n    [WeaponName.sai]: WeaponId.sai,\n    [WeaponName.racquet]: WeaponId.racquet,\n    [WeaponName.axe]: WeaponId.axe,\n    [WeaponName.bumps]: WeaponId.bumps,\n    [WeaponName.flail]: WeaponId.flail,\n    [WeaponName.fryingPan]: WeaponId.fryingPan,\n    [WeaponName.hatchet]: WeaponId.hatchet,\n    [WeaponName.mammothBone]: WeaponId.mammothBone,\n    [WeaponName.morningStar]: WeaponId.morningStar,\n    [WeaponName.trombone]: WeaponId.trombone,\n    [WeaponName.baton]: WeaponId.baton,\n    [WeaponName.halbard]: WeaponId.halbard,\n    [WeaponName.lance]: WeaponId.lance,\n    [WeaponName.trident]: WeaponId.trident,\n    [WeaponName.whip]: WeaponId.whip,\n    [WeaponName.noodleBowl]: WeaponId.noodleBowl,\n    [WeaponName.piopio]: WeaponId.piopio,\n    [WeaponName.shuriken]: WeaponId.shuriken,\n    [WeaponName.broadsword]: WeaponId.broadsword,\n    [WeaponName.scimitar]: WeaponId.scimitar,\n    [WeaponName.sword]: WeaponId.sword,\n};\nvar WeaponById = {\n    [WeaponId.fan]: WeaponName.fan,\n    [WeaponId.keyboard]: WeaponName.keyboard,\n    [WeaponId.knife]: WeaponName.knife,\n    [WeaponId.leek]: WeaponName.leek,\n    [WeaponId.mug]: WeaponName.mug,\n    [WeaponId.sai]: WeaponName.sai,\n    [WeaponId.racquet]: WeaponName.racquet,\n    [WeaponId.axe]: WeaponName.axe,\n    [WeaponId.bumps]: WeaponName.bumps,\n    [WeaponId.flail]: WeaponName.flail,\n    [WeaponId.fryingPan]: WeaponName.fryingPan,\n    [WeaponId.hatchet]: WeaponName.hatchet,\n    [WeaponId.mammothBone]: WeaponName.mammothBone,\n    [WeaponId.morningStar]: WeaponName.morningStar,\n    [WeaponId.trombone]: WeaponName.trombone,\n    [WeaponId.baton]: WeaponName.baton,\n    [WeaponId.halbard]: WeaponName.halbard,\n    [WeaponId.lance]: WeaponName.lance,\n    [WeaponId.trident]: WeaponName.trident,\n    [WeaponId.whip]: WeaponName.whip,\n    [WeaponId.noodleBowl]: WeaponName.noodleBowl,\n    [WeaponId.piopio]: WeaponName.piopio,\n    [WeaponId.shuriken]: WeaponName.shuriken,\n    [WeaponId.broadsword]: WeaponName.broadsword,\n    [WeaponId.scimitar]: WeaponName.scimitar,\n    [WeaponId.sword]: WeaponName.sword,\n};\nvar WeaponTypes = ['fast', 'sharp', 'heavy', 'long', 'thrown', 'blunt'];\nvar WeaponType = {\n    FAST: 'fast',\n    SHARP: 'sharp',\n    HEAVY: 'heavy',\n    LONG: 'long',\n    THROWN: 'thrown',\n    BLUNT: 'blunt',\n};\nvar WeaponTypeColor = {\n    fast: '#8686ff',\n    sharp: 'red',\n    heavy: 'brown',\n    long: 'green',\n    thrown: 'purple',\n    blunt: 'orange',\n};\nvar WeaponAnimations = ['fist', 'slash', 'estoc', 'whip'];\nvar limitedWeapons = [\n    'knife', 'broadsword', 'lance', 'baton', 'trident', 'hatchet',\n    'scimitar', 'axe', 'sword', 'fan', 'shuriken', 'bumps',\n    'morningStar', 'mammothBone', 'flail', 'whip',\n];\nvar MAX_LIMITED_WEAPONS = limitedWeapons.length - 3;\nvar weapons = [\n    {\n        name: 'axe',\n        odds: 3,\n        types: ['heavy', 'blunt'],\n        tempo: 2.3,\n        reversal: -0.2,\n        evasion: -0.4,\n        dexterity: -0.3,\n        block: -0.5,\n        accuracy: 0.5,\n        disarm: 0.1,\n        combo: -0.4,\n        deflect: 0,\n        damage: 55,\n        toss: 5,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'baton',\n        odds: 70,\n        types: ['long'],\n        tempo: 1,\n        reversal: 0.3,\n        evasion: 0.05,\n        dexterity: 0,\n        block: 0.25,\n        accuracy: 0,\n        disarm: 0.25,\n        combo: 0.1,\n        deflect: 0,\n        damage: 6,\n        toss: 3,\n        reach: 3,\n        animation: 'estoc',\n    },\n    {\n        name: 'broadsword',\n        odds: 100,\n        types: ['sharp'],\n        tempo: 1.2,\n        reversal: 0.1,\n        evasion: 0,\n        dexterity: 0,\n        block: 0.15,\n        accuracy: 0,\n        disarm: 0.15,\n        combo: 0,\n        deflect: 0,\n        damage: 10,\n        toss: 5,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'bumps',\n        odds: 50,\n        types: ['heavy', 'blunt'],\n        tempo: 2,\n        reversal: -0.3,\n        evasion: -0.3,\n        dexterity: -0.35,\n        block: -0.3,\n        accuracy: 0.3,\n        disarm: 0.1,\n        combo: -0.6,\n        deflect: 0,\n        damage: 30,\n        toss: 5,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'fan',\n        odds: 2,\n        types: ['fast'],\n        tempo: 0.28,\n        reversal: 0.5,\n        evasion: 0.6,\n        dexterity: 0.5,\n        block: -0.5,\n        accuracy: 0,\n        disarm: -0.5,\n        combo: 0.45,\n        deflect: 0.25,\n        damage: 4,\n        toss: 5,\n        reach: 0,\n        animation: 'slash',\n    },\n    {\n        name: 'flail',\n        odds: 4,\n        types: ['heavy', 'blunt'],\n        tempo: 2.2,\n        reversal: 0,\n        evasion: -0.3,\n        dexterity: -0.1,\n        block: -0.5,\n        accuracy: 1.5,\n        disarm: -0.2,\n        combo: 0.3,\n        deflect: 0,\n        damage: 36,\n        toss: 5,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'fryingPan',\n        odds: 0.4,\n        types: ['heavy', 'blunt'],\n        tempo: 1.2,\n        reversal: 0,\n        evasion: 0,\n        dexterity: 0,\n        block: 0.4,\n        accuracy: 0,\n        disarm: 0,\n        combo: -0.4,\n        deflect: 0.4,\n        damage: 17,\n        toss: 2,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'halbard',\n        odds: 2,\n        types: ['long', 'sharp'],\n        tempo: 1.8,\n        reversal: 0,\n        evasion: 0,\n        dexterity: -0.4,\n        block: 0,\n        accuracy: 0,\n        disarm: 0.1,\n        combo: 0.1,\n        deflect: 0,\n        damage: 24,\n        toss: 2,\n        reach: 4,\n        animation: 'slash',\n    },\n    {\n        name: 'hatchet',\n        odds: 40,\n        types: ['heavy', 'sharp'],\n        tempo: 1.5,\n        reversal: 0,\n        evasion: 0,\n        dexterity: 0,\n        block: -0.1,\n        accuracy: 0,\n        disarm: 0,\n        combo: 0,\n        deflect: 0,\n        damage: 17,\n        toss: 3,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'keyboard',\n        odds: 0.4,\n        types: ['fast', 'blunt'],\n        tempo: 1,\n        reversal: 0,\n        evasion: 0.1,\n        dexterity: 0.2,\n        block: 0,\n        accuracy: 0,\n        disarm: 0,\n        combo: 0.5,\n        deflect: 0.3,\n        damage: 7,\n        toss: 2,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'knife',\n        odds: 80,\n        types: ['fast', 'sharp'],\n        tempo: 0.6,\n        reversal: 0,\n        evasion: 0.1,\n        dexterity: 0.5,\n        block: 0,\n        accuracy: 0,\n        disarm: 0,\n        combo: 0.3,\n        deflect: 0,\n        damage: 7,\n        toss: 5,\n        reach: 0,\n        animation: 'estoc',\n    },\n    {\n        name: 'lance',\n        odds: 40,\n        types: ['long'],\n        tempo: 1.2,\n        reversal: -0.1,\n        evasion: 0,\n        dexterity: 0,\n        block: 0,\n        accuracy: 0,\n        disarm: 0.1,\n        combo: 0,\n        deflect: 0,\n        damage: 12,\n        toss: 2,\n        reach: 3,\n        animation: 'estoc',\n    },\n    {\n        name: 'leek',\n        odds: 0.4,\n        types: ['fast', 'blunt'],\n        tempo: 1.1,\n        reversal: 1,\n        evasion: 0,\n        dexterity: 1,\n        block: -0.5,\n        accuracy: 2,\n        disarm: 0,\n        combo: 2,\n        deflect: 0,\n        damage: 5,\n        toss: 2,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'mammothBone',\n        odds: 20,\n        types: ['heavy', 'blunt'],\n        tempo: 1.6,\n        reversal: 0,\n        evasion: 0,\n        dexterity: 0,\n        block: 0,\n        accuracy: 0.5,\n        disarm: 0.1,\n        combo: -0.1,\n        deflect: 0,\n        damage: 14,\n        toss: 5,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'morningStar',\n        odds: 6,\n        types: ['heavy', 'blunt'],\n        tempo: 1.5,\n        reversal: 0,\n        evasion: -0.1,\n        block: 0,\n        accuracy: 0.3,\n        dexterity: -0.05,\n        disarm: 0.1,\n        combo: 0,\n        deflect: 0,\n        damage: 20,\n        toss: 5,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'mug',\n        odds: 0.4,\n        types: ['fast'],\n        tempo: 0.9,\n        reversal: 0,\n        evasion: 0.15,\n        dexterity: 0.3,\n        block: -0.1,\n        accuracy: 0,\n        disarm: 0,\n        combo: 0.4,\n        deflect: 0,\n        damage: 8,\n        toss: 2,\n        reach: 0,\n        animation: 'estoc',\n    },\n    {\n        name: 'noodleBowl',\n        odds: 0.4,\n        types: ['thrown'],\n        tempo: 0.45,\n        reversal: 0,\n        evasion: 0.1,\n        dexterity: 0,\n        block: -0.1,\n        accuracy: 0,\n        disarm: 0,\n        combo: 0.3,\n        deflect: 0,\n        damage: 10,\n        toss: 2,\n        reach: 0,\n        animation: 'fist',\n    },\n    {\n        name: 'piopio',\n        odds: 0.4,\n        types: ['thrown'],\n        tempo: 0.32,\n        reversal: 0,\n        evasion: 0.5,\n        dexterity: 0,\n        block: -0.1,\n        accuracy: 0,\n        disarm: 0.5,\n        combo: 0,\n        deflect: 0,\n        damage: 5,\n        toss: 2,\n        reach: 0,\n        animation: 'fist',\n    },\n    {\n        name: 'racquet',\n        odds: 0.4,\n        types: ['fast', 'blunt'],\n        tempo: 0.8,\n        reversal: 1,\n        evasion: 0.1,\n        dexterity: 0,\n        block: 0.2,\n        accuracy: 0,\n        disarm: 0,\n        combo: 0,\n        deflect: 0.5,\n        damage: 6,\n        toss: 2,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'sai',\n        odds: 6,\n        types: ['fast'],\n        tempo: 0.6,\n        reversal: 0,\n        evasion: 0.1,\n        dexterity: 0.25,\n        block: 0.3,\n        accuracy: 0,\n        disarm: 1,\n        combo: 0.3,\n        deflect: 0,\n        damage: 8,\n        toss: 5,\n        reach: 0,\n        animation: 'estoc',\n    },\n    {\n        name: 'scimitar',\n        odds: 6,\n        types: ['sharp'],\n        tempo: 0.8,\n        reversal: 0,\n        evasion: 0,\n        dexterity: 0.2,\n        block: 0.1,\n        accuracy: 0,\n        disarm: 0,\n        combo: 0.15,\n        deflect: 0,\n        damage: 10,\n        toss: 3,\n        reach: 1,\n        animation: 'slash',\n    },\n    {\n        name: 'shuriken',\n        odds: 8,\n        types: ['thrown'],\n        tempo: 0.12,\n        reversal: 0,\n        evasion: 0.15,\n        dexterity: 0,\n        block: -0.1,\n        accuracy: 0,\n        disarm: -0.5,\n        combo: 0.3,\n        deflect: 0,\n        damage: 3,\n        toss: 5,\n        reach: 0,\n        animation: 'fist',\n    },\n    {\n        name: 'sword',\n        odds: 4,\n        types: ['sharp'],\n        tempo: 1.8,\n        reversal: 0,\n        evasion: -0.2,\n        dexterity: -0.1,\n        block: 0,\n        accuracy: -0.2,\n        disarm: 0.1,\n        combo: 0,\n        deflect: 0,\n        damage: 28,\n        toss: 5,\n        reach: 2,\n        animation: 'slash',\n    },\n    {\n        name: 'trident',\n        odds: 10,\n        types: ['long'],\n        tempo: 1.4,\n        reversal: 0.05,\n        evasion: 0,\n        dexterity: 0,\n        block: 0,\n        accuracy: 0,\n        disarm: 0.2,\n        combo: 0,\n        deflect: 0,\n        damage: 14,\n        toss: 3,\n        reach: 3,\n        animation: 'estoc',\n    },\n    {\n        name: 'trombone',\n        odds: 0.4,\n        types: ['heavy', 'blunt'],\n        tempo: 2.5,\n        reversal: 0,\n        evasion: 0,\n        dexterity: -0.1,\n        block: 0.2,\n        accuracy: 0.2,\n        disarm: 0.5,\n        combo: 0.3,\n        deflect: 0,\n        damage: 20,\n        toss: 2,\n        reach: 2,\n        animation: 'slash',\n    },\n    {\n        name: 'whip',\n        odds: 3,\n        types: ['long'],\n        tempo: 1.5,\n        reversal: -0.1,\n        evasion: 0.3,\n        dexterity: 0.3,\n        block: -0.2,\n        accuracy: -0.2,\n        disarm: 0.3,\n        combo: 0.35,\n        deflect: 0,\n        damage: 10,\n        toss: 5,\n        reach: 5,\n        animation: 'whip',\n    },\n];\nvar WEAPONS_TOTAL_ODDS = weapons.reduce((acc, weapon) => acc + weapon.odds, 0);\nvar WEAPONS_SFX = {\n    ...weapons.reduce((acc, weapon) => {\n        acc[weapon.name] = [];\n        // Special SFX for some weapons\n        if (weapon.name === 'fryingPan') {\n            acc[weapon.name] = ['fryingPan'];\n            return acc;\n        }\n        if (weapon.name === 'lance') {\n            acc[weapon.name] = ['lance1', 'lance2'];\n            return acc;\n        }\n        if (weapon.name === 'piopio') {\n            acc[weapon.name] = ['piopio'];\n            return acc;\n        }\n        if (weapon.name === 'sword') {\n            acc[weapon.name] = ['sword'];\n            return acc;\n        }\n        if (weapon.name === 'trombone') {\n            acc[weapon.name] = ['trombone1', 'trombone2'];\n            return acc;\n        }\n        if (weapon.name === 'whip') {\n            acc[weapon.name] = ['whip'];\n            return acc;\n        }\n        // SFX depending on weapon type\n        if (weapon.types.includes('sharp')) {\n            acc[weapon.name].push('sharp1', 'sharp2', 'sharp3', 'sharp4', 'sharp5', 'sharp6', 'sharp7', 'sharp8');\n        }\n        else {\n            acc[weapon.name].push('blunt1', 'blunt2', 'blunt3', 'blunt4', 'blunt5', 'blunt6', 'blunt7', 'blunt8');\n        }\n        return acc;\n    }, {}),\n};\nclass ExpectedError extends Error {\n    constructor(message = '') {\n        super(message);\n    }\n}\nvar FightModifier = /*exports.*//*$Enums.*/FightModifier = {\n  noThrows: 'noThrows',\n  focusOpponent: 'focusOpponent',\n  alwaysUseSupers: 'alwaysUseSupers',\n  drawEveryWeapon: 'drawEveryWeapon',\n  doubleAgility: 'doubleAgility',\n  randomSkill: 'randomSkill',\n  randomWeapon: 'randomWeapon',\n  bareHandsFirstHit: 'bareHandsFirstHit',\n  startWithWeapon: 'startWithWeapon'\n};\nvar Gender = {\n  male: 'male',\n  female: 'female'\n};\nvar getFinalStat = (brute, stat, modifiers, randomSkillIndex) => {\n    var multiplier = stat === 'agility' ? modifiers.includes(FightModifier.doubleAgility) ? 2 : 1 : 1;\n    var randomSkill = (0, getTempSkill)(brute, randomSkillIndex);\n    // No random skill, return normal stat\n    if (!randomSkill) {\n        return brute[`${stat}Value`] * multiplier;\n    }\n    // Apply skill modifiers\n    var newBrute = (0, applySkillModifiers)(brute, randomSkill);\n    // Return new stat\n    return Math.floor(newBrute[`${stat}Stat`] * newBrute[`${stat}Modifier`]) * multiplier;\n};\nvar getFinalStat = getFinalStat;\nvar getFinalHP = (brute, randomSkillIndex) => {\n    var randomSkill = (0, getTempSkill)(brute, randomSkillIndex);\n    // No random skill, return normal HP\n    if (!randomSkill) {\n        return (0, getHP)(brute.level, brute.enduranceValue);\n    }\n    // Apply skill modifiers\n    var newBrute = (0, applySkillModifiers)(brute, randomSkill);\n    // Return new HP\n    return (0, getHP)(newBrute.level, Math.floor(newBrute.enduranceStat * newBrute.enduranceModifier));\n};\nvar getFinalHP = getFinalHP;\nvar getHP = (level, endurance) => Math.floor(50\n    + (Math.max(endurance, 0)\n        + level * 0.25) * 6);\nvar getHP = getHP;\nvar readableHPFormula = (level, endurance) => `50 + (max(${endurance}, 0) + ${level} * 0.25) * 6`;\nvar readableHPFormula = readableHPFormula;\nvar InventoryItemType = /*exports.*//*$Enums.*/InventoryItemType = {\n  visualReset: 'visualReset',\n  bossTicket: 'bossTicket',\n  nameChange: 'nameChange',\n  favoriteFight: 'favoriteFight'\n};\nvar LogType = /*exports.*//*$Enums.*/LogType = {\n  win: 'win',\n  lose: 'lose',\n  child: 'child',\n  childup: 'childup',\n  up: 'up',\n  lvl: 'lvl',\n  tournament: 'tournament',\n  tournamentXp: 'tournamentXp',\n  bossDefeat: 'bossDefeat'\n};\nvar pad = (n, width, z = '0') => {\n    var nString = `${n}`;\n    return nString.length >= width\n        ? nString\n        : new Array(width - nString.length + 1).join(z) + n.toString();\n};\nvar readBodyString = (bodyString) => ({\n    p1: parseInt(bodyString[0] || '0', 16),\n    p1a: parseInt(bodyString[1] || '0', 16),\n    p1b: parseInt(bodyString[2] || '0', 16),\n    p2: parseInt(bodyString[3] || '0', 16),\n    p3: parseInt(bodyString[4] || '0', 16),\n    p4: parseInt(bodyString[5] || '0', 16),\n    p5: parseInt(bodyString[6] || '0', 16),\n    p6: parseInt(bodyString[7] || '0', 16),\n    p7: parseInt(bodyString[8] || '0', 16),\n    p7b: parseInt(bodyString[9] || '0', 16),\n    p8: parseInt(bodyString[10] || '0', 16),\n});\nvar readBodyString = readBodyString;\nvar generateBodyString = (body) => [\n    body.p1.toString(16),\n    body.p1a.toString(16),\n    body.p1b.toString(16),\n    body.p2.toString(16),\n    body.p3.toString(16),\n    body.p4.toString(16),\n    body.p5.toString(16),\n    body.p6.toString(16),\n    body.p7.toString(16),\n    body.p7b.toString(16),\n    body.p8.toString(16),\n].join('');\nvar generateBodyString = generateBodyString;\nvar getColor = (gender, part, color) => {\n    var skinParts = ['col0', 'col0a', 'col0c'];\n    var hairParts = ['col1', 'col1a', 'col1b', 'col1c', 'col1d'];\n    var clothingParts = ['col2', 'col2a', 'col2b', 'col3', 'col3b', 'col4', 'col4a', 'col4b'];\n    let colorArray = [];\n    if (skinParts.includes(part))\n        colorArray = colors[gender].skin;\n    else if (hairParts.includes(part))\n        colorArray = colors[gender].hair;\n    else if (clothingParts.includes(part))\n        colorArray = colors[gender].clothing;\n    var normalColor = colorArray[color];\n    if (normalColor)\n        return normalColor;\n    return colors.special[99 - color] || '#ffffff';\n};\nvar getColor = getColor;\nvar readColorString = (gender, colorsString) => ({\n    col0: (0, getColor)(gender, 'col0', +colorsString.slice(0, 2)),\n    col0a: (0, getColor)(gender, 'col0a', +colorsString.slice(2, 4)),\n    col0c: (0, getColor)(gender, 'col0c', +colorsString.slice(4, 6)),\n    col1: (0, getColor)(gender, 'col1', +colorsString.slice(6, 8)),\n    col1a: (0, getColor)(gender, 'col1a', +colorsString.slice(8, 10)),\n    col1b: (0, getColor)(gender, 'col1b', +colorsString.slice(10, 12)),\n    col1c: (0, getColor)(gender, 'col1c', +colorsString.slice(12, 14)),\n    col1d: (0, getColor)(gender, 'col1d', +colorsString.slice(14, 16)),\n    col2: (0, getColor)(gender, 'col2', +colorsString.slice(16, 18)),\n    col2a: (0, getColor)(gender, 'col2a', +colorsString.slice(18, 20)),\n    col2b: (0, getColor)(gender, 'col2b', +colorsString.slice(20, 22)),\n    col3: (0, getColor)(gender, 'col3', +colorsString.slice(22, 24)),\n    col3b: (0, getColor)(gender, 'col3b', +colorsString.slice(24, 26)),\n    col4: (0, getColor)(gender, 'col4', +colorsString.slice(26, 28)),\n    col4a: (0, getColor)(gender, 'col4a', +colorsString.slice(28, 30)),\n    col4b: (0, getColor)(gender, 'col4b', +colorsString.slice(30, 32)),\n});\nvar readColorString = readColorString;\nvar generateColorString = (colorObject) => [\n    (0, pad)(colorObject.col0, 2),\n    (0, pad)(colorObject.col0a, 2),\n    (0, pad)(colorObject.col0c, 2),\n    (0, pad)(colorObject.col1, 2),\n    (0, pad)(colorObject.col1a, 2),\n    (0, pad)(colorObject.col1b, 2),\n    (0, pad)(colorObject.col1c, 2),\n    (0, pad)(colorObject.col1d, 2),\n    (0, pad)(colorObject.col2, 2),\n    (0, pad)(colorObject.col2a, 2),\n    (0, pad)(colorObject.col2b, 2),\n    (0, pad)(colorObject.col3, 2),\n    (0, pad)(colorObject.col3b, 2),\n    (0, pad)(colorObject.col4, 2),\n    (0, pad)(colorObject.col4a, 2),\n    (0, pad)(colorObject.col4b, 2),\n].join('');\nvar PetName = /*exports.*//*$Enums.*/PetName = {\n  dog1: 'dog1',\n  dog2: 'dog2',\n  dog3: 'dog3',\n  panther: 'panther',\n  bear: 'bear'\n};\nvar randomBetween = (min, max) => {\n    if (min > max)\n        return 0;\n    if (min === max)\n        return min;\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nvar randomItem = void 0;\nvar randomItem = (items) => {\n    if (!items.length) {\n        throw new Error('No items');\n    }\n    if (items.length === 1) {\n        var item = items[0];\n        if (!item) {\n            throw new Error('No item');\n        }\n        return item;\n    }\n    var index = (0, randomBetween)(0, items.length - 1);\n    var item = items[index];\n    if (!item) {\n        throw new Error('No item');\n    }\n    return item;\n};\nvar randomItem = randomItem;\nvar SkillName = /*exports.*//*$Enums.*/SkillName = {\n  herculeanStrength: 'herculeanStrength',\n  felineAgility: 'felineAgility',\n  lightningBolt: 'lightningBolt',\n  vitality: 'vitality',\n  immortality: 'immortality',\n  reconnaissance: 'reconnaissance',\n  weaponsMaster: 'weaponsMaster',\n  martialArts: 'martialArts',\n  sixthSense: 'sixthSense',\n  hostility: 'hostility',\n  fistsOfFury: 'fistsOfFury',\n  shield: 'shield',\n  armor: 'armor',\n  toughenedSkin: 'toughenedSkin',\n  untouchable: 'untouchable',\n  sabotage: 'sabotage',\n  shock: 'shock',\n  bodybuilder: 'bodybuilder',\n  relentless: 'relentless',\n  survival: 'survival',\n  leadSkeleton: 'leadSkeleton',\n  balletShoes: 'balletShoes',\n  determination: 'determination',\n  firstStrike: 'firstStrike',\n  resistant: 'resistant',\n  counterAttack: 'counterAttack',\n  ironHead: 'ironHead',\n  thief: 'thief',\n  fierceBrute: 'fierceBrute',\n  tragicPotion: 'tragicPotion',\n  net: 'net',\n  bomb: 'bomb',\n  hammer: 'hammer',\n  cryOfTheDamned: 'cryOfTheDamned',\n  hypnosis: 'hypnosis',\n  flashFlood: 'flashFlood',\n  tamer: 'tamer',\n  regeneration: 'regeneration',\n  chef: 'chef',\n  spy: 'spy',\n  saboteur: 'saboteur',\n  backup: 'backup',\n  hideaway: 'hideaway',\n  monk: 'monk',\n  vampirism: 'vampirism',\n  chaining: 'chaining',\n  haste: 'haste',\n  treat: 'treat',\n  repulse: 'repulse'\n};\nvar weightedRandom = (items) => {\n    var firstItem = items[0];\n    if (!firstItem) {\n        throw new Error('No items');\n    }\n    // Calculate total odds\n    var totalOdds = items.reduce((acc, item) => acc + item.odds, 0);\n    let i = 0;\n    var weights = [];\n    for (i = 0; i < items.length; i++) {\n        weights[i] = ((items[i]?.odds || 0) / totalOdds) + (weights[i - 1] || 0);\n    }\n    var random = Math.random() * (weights[weights.length - 1] || 0);\n    for (i = 0; i < weights.length; i++) {\n        if ((weights[i] || 0) > random) {\n            break;\n        }\n    }\n    return items[i] || firstItem;\n};\nvar pets = [\n    {\n        name: PetName.bear,\n        odds: 1,\n        enduranceMalus: 8,\n        initiative: 3.6,\n        strength: 40,\n        agility: 2,\n        speed: 1,\n        hp: 110,\n        counter: 0,\n        combo: -0.2,\n        block: -0.25,\n        evasion: 0.1,\n        accuracy: 0.2,\n        disarm: 0.05,\n        damage: 5,\n    },\n    {\n        name: PetName.panther,\n        odds: 1,\n        enduranceMalus: 6,\n        initiative: 0.6,\n        strength: 23,\n        agility: 16,\n        speed: 24,\n        hp: 26,\n        counter: 0,\n        combo: 0.7,\n        block: 0,\n        evasion: 0.2,\n        accuracy: 0,\n        disarm: 0,\n        damage: 3,\n    },\n    {\n        name: PetName.dog3,\n        odds: 2,\n        enduranceMalus: 2,\n        initiative: 0.1,\n        strength: 6,\n        agility: 5,\n        speed: 3,\n        hp: 14,\n        counter: 0,\n        combo: 0.2,\n        block: 0,\n        evasion: 0,\n        accuracy: 0,\n        disarm: 0,\n        damage: 3,\n    },\n    {\n        name: PetName.dog2,\n        odds: 8,\n        enduranceMalus: 2,\n        initiative: 0.1,\n        strength: 6,\n        agility: 5,\n        speed: 3,\n        hp: 14,\n        counter: 0,\n        combo: 0.2,\n        block: 0,\n        evasion: 0,\n        accuracy: 0,\n        disarm: 0,\n        damage: 3,\n    },\n    {\n        name: PetName.dog1,\n        odds: 20,\n        enduranceMalus: 2,\n        initiative: 0.1,\n        strength: 6,\n        agility: 5,\n        speed: 3,\n        hp: 14,\n        counter: 0,\n        combo: 0.2,\n        block: 0,\n        evasion: 0,\n        accuracy: 0,\n        disarm: 0,\n        damage: 3,\n    },\n];\nvar PETS_TOTAL_ODDS = pets.reduce((acc, pet) => acc + pet.odds, 0);\nvar scalingByPet = {\n    [PetName.bear]: {\n        strength: 0.4,\n        agility: 0.1,\n        speed: 0.1,\n        hp: 0.4,\n    },\n    [PetName.panther]: {\n        strength: 0.25,\n        agility: 0.3,\n        speed: 0.3,\n        hp: 0.15,\n    },\n    [PetName.dog3]: {\n        strength: 0.1,\n        agility: 0.2,\n        speed: 0.4,\n        hp: 0.1,\n    },\n    [PetName.dog2]: {\n        strength: 0.1,\n        agility: 0.2,\n        speed: 0.4,\n        hp: 0.1,\n    },\n    [PetName.dog1]: {\n        strength: 0.1,\n        agility: 0.2,\n        speed: 0.4,\n        hp: 0.1,\n    },\n};\nvar petStatToBruteStat = {\n    strength: 'strengthValue',\n    agility: 'agilityValue',\n    speed: 'speedValue',\n    hp: 'hp',\n};\nvar getPetStat = (brute, pet, stat) => {\n    var base = pet[stat];\n    var scaling = scalingByPet[pet.name][stat];\n    var bruteStat = brute[petStatToBruteStat[stat]];\n    return base + Math.ceil(scaling * bruteStat);\n};\nvar getPetStat = getPetStat;\nvar SkillId;\n(function (SkillId) {\n    SkillId[SkillId[\"herculeanStrength\"] = 0] = \"herculeanStrength\";\n    SkillId[SkillId[\"felineAgility\"] = 1] = \"felineAgility\";\n    SkillId[SkillId[\"lightningBolt\"] = 2] = \"lightningBolt\";\n    SkillId[SkillId[\"vitality\"] = 3] = \"vitality\";\n    SkillId[SkillId[\"immortality\"] = 4] = \"immortality\";\n    SkillId[SkillId[\"reconnaissance\"] = 5] = \"reconnaissance\";\n    SkillId[SkillId[\"weaponsMaster\"] = 6] = \"weaponsMaster\";\n    SkillId[SkillId[\"martialArts\"] = 7] = \"martialArts\";\n    SkillId[SkillId[\"sixthSense\"] = 8] = \"sixthSense\";\n    SkillId[SkillId[\"hostility\"] = 9] = \"hostility\";\n    SkillId[SkillId[\"fistsOfFury\"] = 10] = \"fistsOfFury\";\n    SkillId[SkillId[\"shield\"] = 11] = \"shield\";\n    SkillId[SkillId[\"armor\"] = 12] = \"armor\";\n    SkillId[SkillId[\"toughenedSkin\"] = 13] = \"toughenedSkin\";\n    SkillId[SkillId[\"untouchable\"] = 14] = \"untouchable\";\n    SkillId[SkillId[\"sabotage\"] = 15] = \"sabotage\";\n    SkillId[SkillId[\"shock\"] = 16] = \"shock\";\n    SkillId[SkillId[\"bodybuilder\"] = 17] = \"bodybuilder\";\n    SkillId[SkillId[\"relentless\"] = 18] = \"relentless\";\n    SkillId[SkillId[\"survival\"] = 19] = \"survival\";\n    SkillId[SkillId[\"leadSkeleton\"] = 20] = \"leadSkeleton\";\n    SkillId[SkillId[\"balletShoes\"] = 21] = \"balletShoes\";\n    SkillId[SkillId[\"determination\"] = 22] = \"determination\";\n    SkillId[SkillId[\"firstStrike\"] = 23] = \"firstStrike\";\n    SkillId[SkillId[\"resistant\"] = 24] = \"resistant\";\n    SkillId[SkillId[\"counterAttack\"] = 25] = \"counterAttack\";\n    SkillId[SkillId[\"ironHead\"] = 26] = \"ironHead\";\n    SkillId[SkillId[\"thief\"] = 27] = \"thief\";\n    SkillId[SkillId[\"fierceBrute\"] = 28] = \"fierceBrute\";\n    SkillId[SkillId[\"tragicPotion\"] = 29] = \"tragicPotion\";\n    SkillId[SkillId[\"net\"] = 30] = \"net\";\n    SkillId[SkillId[\"bomb\"] = 31] = \"bomb\";\n    SkillId[SkillId[\"hammer\"] = 32] = \"hammer\";\n    SkillId[SkillId[\"cryOfTheDamned\"] = 33] = \"cryOfTheDamned\";\n    SkillId[SkillId[\"hypnosis\"] = 34] = \"hypnosis\";\n    SkillId[SkillId[\"flashFlood\"] = 35] = \"flashFlood\";\n    SkillId[SkillId[\"tamer\"] = 36] = \"tamer\";\n    SkillId[SkillId[\"regeneration\"] = 37] = \"regeneration\";\n    SkillId[SkillId[\"chef\"] = 38] = \"chef\";\n    SkillId[SkillId[\"spy\"] = 39] = \"spy\";\n    SkillId[SkillId[\"saboteur\"] = 40] = \"saboteur\";\n    SkillId[SkillId[\"backup\"] = 41] = \"backup\";\n    SkillId[SkillId[\"hideaway\"] = 42] = \"hideaway\";\n    SkillId[SkillId[\"monk\"] = 43] = \"monk\";\n    SkillId[SkillId[\"vampirism\"] = 44] = \"vampirism\";\n    SkillId[SkillId[\"chaining\"] = 45] = \"chaining\";\n    SkillId[SkillId[\"haste\"] = 46] = \"haste\";\n    SkillId[SkillId[\"treat\"] = 47] = \"treat\";\n    SkillId[SkillId[\"repulse\"] = 48] = \"repulse\";\n})(SkillId || (/*exports.*/SkillId = SkillId = {}));\nvar SkillByName = {\n    [SkillName.herculeanStrength]: SkillId.herculeanStrength,\n    [SkillName.felineAgility]: SkillId.felineAgility,\n    [SkillName.lightningBolt]: SkillId.lightningBolt,\n    [SkillName.vitality]: SkillId.vitality,\n    [SkillName.immortality]: SkillId.immortality,\n    [SkillName.reconnaissance]: SkillId.reconnaissance,\n    [SkillName.weaponsMaster]: SkillId.weaponsMaster,\n    [SkillName.martialArts]: SkillId.martialArts,\n    [SkillName.sixthSense]: SkillId.sixthSense,\n    [SkillName.hostility]: SkillId.hostility,\n    [SkillName.fistsOfFury]: SkillId.fistsOfFury,\n    [SkillName.shield]: SkillId.shield,\n    [SkillName.armor]: SkillId.armor,\n    [SkillName.toughenedSkin]: SkillId.toughenedSkin,\n    [SkillName.untouchable]: SkillId.untouchable,\n    [SkillName.sabotage]: SkillId.sabotage,\n    [SkillName.shock]: SkillId.shock,\n    [SkillName.bodybuilder]: SkillId.bodybuilder,\n    [SkillName.relentless]: SkillId.relentless,\n    [SkillName.survival]: SkillId.survival,\n    [SkillName.leadSkeleton]: SkillId.leadSkeleton,\n    [SkillName.balletShoes]: SkillId.balletShoes,\n    [SkillName.determination]: SkillId.determination,\n    [SkillName.firstStrike]: SkillId.firstStrike,\n    [SkillName.resistant]: SkillId.resistant,\n    [SkillName.counterAttack]: SkillId.counterAttack,\n    [SkillName.ironHead]: SkillId.ironHead,\n    [SkillName.thief]: SkillId.thief,\n    [SkillName.fierceBrute]: SkillId.fierceBrute,\n    [SkillName.tragicPotion]: SkillId.tragicPotion,\n    [SkillName.net]: SkillId.net,\n    [SkillName.bomb]: SkillId.bomb,\n    [SkillName.hammer]: SkillId.hammer,\n    [SkillName.cryOfTheDamned]: SkillId.cryOfTheDamned,\n    [SkillName.hypnosis]: SkillId.hypnosis,\n    [SkillName.flashFlood]: SkillId.flashFlood,\n    [SkillName.tamer]: SkillId.tamer,\n    [SkillName.regeneration]: SkillId.regeneration,\n    [SkillName.chef]: SkillId.chef,\n    [SkillName.spy]: SkillId.spy,\n    [SkillName.saboteur]: SkillId.saboteur,\n    [SkillName.backup]: SkillId.backup,\n    [SkillName.hideaway]: SkillId.hideaway,\n    [SkillName.monk]: SkillId.monk,\n    [SkillName.vampirism]: SkillId.vampirism,\n    [SkillName.chaining]: SkillId.chaining,\n    [SkillName.haste]: SkillId.haste,\n    [SkillName.treat]: SkillId.treat,\n    [SkillName.repulse]: SkillId.repulse,\n};\nvar SkillById = {\n    [SkillId.herculeanStrength]: SkillName.herculeanStrength,\n    [SkillId.felineAgility]: SkillName.felineAgility,\n    [SkillId.lightningBolt]: SkillName.lightningBolt,\n    [SkillId.vitality]: SkillName.vitality,\n    [SkillId.immortality]: SkillName.immortality,\n    [SkillId.reconnaissance]: SkillName.reconnaissance,\n    [SkillId.weaponsMaster]: SkillName.weaponsMaster,\n    [SkillId.martialArts]: SkillName.martialArts,\n    [SkillId.sixthSense]: SkillName.sixthSense,\n    [SkillId.hostility]: SkillName.hostility,\n    [SkillId.fistsOfFury]: SkillName.fistsOfFury,\n    [SkillId.shield]: SkillName.shield,\n    [SkillId.armor]: SkillName.armor,\n    [SkillId.toughenedSkin]: SkillName.toughenedSkin,\n    [SkillId.untouchable]: SkillName.untouchable,\n    [SkillId.sabotage]: SkillName.sabotage,\n    [SkillId.shock]: SkillName.shock,\n    [SkillId.bodybuilder]: SkillName.bodybuilder,\n    [SkillId.relentless]: SkillName.relentless,\n    [SkillId.survival]: SkillName.survival,\n    [SkillId.leadSkeleton]: SkillName.leadSkeleton,\n    [SkillId.balletShoes]: SkillName.balletShoes,\n    [SkillId.determination]: SkillName.determination,\n    [SkillId.firstStrike]: SkillName.firstStrike,\n    [SkillId.resistant]: SkillName.resistant,\n    [SkillId.counterAttack]: SkillName.counterAttack,\n    [SkillId.ironHead]: SkillName.ironHead,\n    [SkillId.thief]: SkillName.thief,\n    [SkillId.fierceBrute]: SkillName.fierceBrute,\n    [SkillId.tragicPotion]: SkillName.tragicPotion,\n    [SkillId.net]: SkillName.net,\n    [SkillId.bomb]: SkillName.bomb,\n    [SkillId.hammer]: SkillName.hammer,\n    [SkillId.cryOfTheDamned]: SkillName.cryOfTheDamned,\n    [SkillId.hypnosis]: SkillName.hypnosis,\n    [SkillId.flashFlood]: SkillName.flashFlood,\n    [SkillId.tamer]: SkillName.tamer,\n    [SkillId.regeneration]: SkillName.regeneration,\n    [SkillId.chef]: SkillName.chef,\n    [SkillId.spy]: SkillName.spy,\n    [SkillId.saboteur]: SkillName.saboteur,\n    [SkillId.backup]: SkillName.backup,\n    [SkillId.hideaway]: SkillName.hideaway,\n    [SkillId.monk]: SkillName.monk,\n    [SkillId.vampirism]: SkillName.vampirism,\n    [SkillId.chaining]: SkillName.chaining,\n    [SkillId.haste]: SkillName.haste,\n    [SkillId.treat]: SkillName.treat,\n    [SkillId.repulse]: SkillName.repulse,\n};\nvar FightStat = {\n    REVERSAL: 'reversal',\n    COUNTER: 'counter',\n    EVASION: 'evasion',\n    DEXTERITY: 'dexterity',\n    BLOCK: 'block',\n    ACCURACY: 'accuracy',\n    DISARM: 'disarm',\n    COMBO: 'combo',\n    DEFLECT: 'deflect',\n    ARMOR: 'armor',\n    DAMAGE: 'damage',\n    HIT_SPEED: 'hitSpeed',\n    INITIATIVE: 'initiative',\n    STRENGTH: 'strength',\n    AGILITY: 'agility',\n    SPEED: 'speed',\n    ENDURANCE: 'endurance',\n};\nvar skills = [\n    {\n        name: 'herculeanStrength',\n        odds: 60,\n        type: 'booster',\n    },\n    {\n        name: 'felineAgility',\n        odds: 60,\n        type: 'booster',\n    },\n    {\n        name: 'lightningBolt',\n        odds: 60,\n        type: 'booster',\n    },\n    {\n        name: 'vitality',\n        odds: 60,\n        type: 'booster',\n    },\n    {\n        name: 'immortality',\n        odds: 0.14,\n        type: 'booster',\n    },\n    {\n        name: 'weaponsMaster',\n        odds: 10,\n        type: 'passive',\n    },\n    {\n        name: 'martialArts',\n        odds: 10,\n        type: 'passive',\n    },\n    {\n        name: 'sixthSense',\n        odds: 20,\n        type: 'passive',\n    },\n    {\n        name: 'hostility',\n        odds: 4,\n        type: 'passive',\n    },\n    {\n        name: 'fistsOfFury',\n        odds: 10,\n        type: 'passive',\n    },\n    {\n        name: 'shield',\n        odds: 10,\n        type: 'passive',\n    },\n    {\n        name: 'armor',\n        odds: 4,\n        type: 'passive',\n    },\n    {\n        name: 'toughenedSkin',\n        odds: 30,\n        type: 'passive',\n    },\n    {\n        name: 'untouchable',\n        odds: 1,\n        type: 'passive',\n    },\n    {\n        name: 'sabotage',\n        odds: 3,\n        type: 'passive',\n    },\n    {\n        name: 'shock',\n        odds: 4,\n        type: 'passive',\n    },\n    {\n        name: 'bodybuilder',\n        odds: 5,\n        type: 'passive',\n    },\n    {\n        name: 'relentless',\n        odds: 4,\n        type: 'passive',\n    },\n    {\n        name: 'survival',\n        odds: 4,\n        type: 'passive',\n    },\n    {\n        name: 'leadSkeleton',\n        odds: 4,\n        type: 'passive',\n    },\n    {\n        name: 'balletShoes',\n        odds: 4,\n        type: 'passive',\n    },\n    {\n        name: 'determination',\n        odds: 4,\n        type: 'passive',\n    },\n    {\n        name: 'firstStrike',\n        odds: 8,\n        type: 'passive',\n    },\n    {\n        name: 'resistant',\n        odds: 3,\n        type: 'passive',\n    },\n    {\n        name: 'reconnaissance',\n        odds: 1,\n        type: 'booster',\n    },\n    {\n        name: 'counterAttack',\n        odds: 10,\n        type: 'passive',\n    },\n    {\n        name: 'ironHead',\n        odds: 4,\n        type: 'passive',\n    },\n    {\n        name: 'thief',\n        odds: 2.5,\n        type: 'super',\n        toss: 8,\n        uses: 2,\n    },\n    {\n        name: 'fierceBrute',\n        odds: 20,\n        type: 'super',\n        toss: 5,\n        uses: 1,\n    },\n    {\n        name: 'tragicPotion',\n        odds: 8,\n        type: 'super',\n        toss: 10,\n        uses: 1,\n    },\n    {\n        name: 'net',\n        odds: 16,\n        type: 'super',\n        toss: 10,\n        uses: 1,\n    },\n    {\n        name: 'bomb',\n        odds: 6,\n        type: 'super',\n        toss: 2,\n        uses: 2,\n    },\n    {\n        name: 'hammer',\n        odds: 1,\n        type: 'super',\n        toss: 2,\n        uses: 1,\n    },\n    {\n        name: 'cryOfTheDamned',\n        odds: 4,\n        type: 'super',\n        toss: 8,\n        uses: 2,\n    },\n    {\n        name: 'hypnosis',\n        odds: 0.5,\n        type: 'super',\n        toss: 3,\n        uses: 1,\n    },\n    {\n        name: 'flashFlood',\n        odds: 0.5,\n        type: 'super',\n        toss: 2,\n        uses: 3,\n    },\n    {\n        name: 'tamer',\n        odds: 4,\n        type: 'super',\n        toss: 20,\n        uses: 4,\n    },\n    {\n        name: 'regeneration',\n        odds: 3,\n        type: 'talent',\n    },\n    {\n        name: 'chef',\n        odds: 1,\n        type: 'talent',\n    },\n    {\n        name: 'spy',\n        odds: 3,\n        type: 'talent',\n    },\n    {\n        name: 'saboteur',\n        odds: 3,\n        type: 'talent',\n    },\n    {\n        name: 'backup',\n        odds: 5,\n        type: 'talent',\n    },\n    {\n        name: 'hideaway',\n        odds: 5,\n        type: 'talent',\n    },\n    {\n        name: 'monk',\n        odds: 5,\n        type: 'talent',\n    },\n    {\n        name: 'vampirism',\n        odds: 10,\n        type: 'super',\n        uses: 1,\n        toss: 5,\n    },\n    {\n        name: 'chaining',\n        odds: 5,\n        type: 'passive',\n    },\n    {\n        name: 'haste',\n        odds: 5,\n        type: 'super',\n        uses: 1,\n        toss: 3,\n    },\n    {\n        name: 'treat',\n        odds: 20,\n        type: 'super',\n        uses: 4,\n        toss: 5,\n    },\n    {\n        name: 'repulse',\n        odds: 10,\n        type: 'passive',\n    },\n];\nvar SKILLS_TOTAL_ODDS = skills.reduce((acc, skill) => acc + skill.odds, 0);\nvar SkillModifiers = {\n    [SkillName.herculeanStrength]: [\n        { stat: FightStat.STRENGTH, value: 3 },\n        { stat: FightStat.STRENGTH, value: 50, percent: true },\n    ],\n    [SkillName.felineAgility]: [\n        { stat: FightStat.AGILITY, value: 3 },\n        { stat: FightStat.AGILITY, value: 50, percent: true },\n    ],\n    [SkillName.lightningBolt]: [\n        { stat: FightStat.SPEED, value: 3 },\n        { stat: FightStat.SPEED, value: 50, percent: true },\n    ],\n    [SkillName.vitality]: [\n        { stat: FightStat.ENDURANCE, value: 3 },\n        { stat: FightStat.ENDURANCE, value: 50, percent: true },\n    ],\n    [SkillName.immortality]: [\n        { stat: FightStat.ENDURANCE, value: 250, percent: true },\n        { stat: FightStat.STRENGTH, value: -25, percent: true },\n        { stat: FightStat.AGILITY, value: -25, percent: true },\n        { stat: FightStat.SPEED, value: -25, percent: true },\n    ],\n    [SkillName.weaponsMaster]: [\n        { stat: FightStat.DAMAGE, weaponType: WeaponType.SHARP, value: 50, percent: true },\n    ],\n    [SkillName.martialArts]: [\n        { stat: FightStat.DAMAGE, weaponType: null, value: 100, percent: true },\n    ],\n    [SkillName.sixthSense]: [\n        { stat: FightStat.COUNTER, value: 10, percent: true },\n    ],\n    [SkillName.hostility]: [\n        { stat: FightStat.REVERSAL, value: 30, percent: true },\n    ],\n    [SkillName.fistsOfFury]: [\n        { stat: FightStat.COMBO, value: 20, percent: true },\n    ],\n    [SkillName.shield]: [\n        { stat: FightStat.BLOCK, value: 45, percent: true },\n    ],\n    [SkillName.armor]: [\n        { stat: FightStat.ARMOR, value: 25, percent: true },\n        { stat: FightStat.SPEED, value: -10, percent: true },\n    ],\n    [SkillName.toughenedSkin]: [\n        { stat: FightStat.ARMOR, value: 10, percent: true },\n    ],\n    [SkillName.untouchable]: [\n        { stat: FightStat.EVASION, value: 30, percent: true },\n    ],\n    [SkillName.sabotage]: [],\n    [SkillName.shock]: [\n        { stat: FightStat.DISARM, value: 50, percent: true },\n    ],\n    [SkillName.bodybuilder]: [\n        { stat: FightStat.HIT_SPEED, weaponType: WeaponType.HEAVY, value: 25, percent: true },\n        { stat: FightStat.DEXTERITY, weaponType: WeaponType.HEAVY, value: 10, percent: true },\n    ],\n    [SkillName.relentless]: [\n        { stat: FightStat.ACCURACY, value: 30, percent: true },\n    ],\n    [SkillName.survival]: [],\n    [SkillName.leadSkeleton]: [],\n    [SkillName.balletShoes]: [\n        { stat: FightStat.EVASION, value: 10, percent: true },\n    ],\n    [SkillName.determination]: [],\n    [SkillName.firstStrike]: [\n        { stat: FightStat.INITIATIVE, value: 200 },\n    ],\n    [SkillName.resistant]: [],\n    [SkillName.reconnaissance]: [\n        { stat: FightStat.INITIATIVE, value: -200 },\n        { stat: FightStat.SPEED, value: 5 },\n        { stat: FightStat.SPEED, value: 150, percent: true },\n    ],\n    [SkillName.counterAttack]: [\n        { stat: FightStat.BLOCK, value: 10, percent: true },\n        { stat: FightStat.REVERSAL, value: 90, percent: true, details: 'afterBlock' },\n    ],\n    [SkillName.ironHead]: [],\n    [SkillName.thief]: [],\n    [SkillName.fierceBrute]: [],\n    [SkillName.tragicPotion]: [],\n    [SkillName.net]: [],\n    [SkillName.bomb]: [],\n    [SkillName.hammer]: [],\n    [SkillName.cryOfTheDamned]: [],\n    [SkillName.hypnosis]: [],\n    [SkillName.flashFlood]: [],\n    [SkillName.tamer]: [],\n    [SkillName.regeneration]: [],\n    [SkillName.chef]: [],\n    [SkillName.spy]: [],\n    [SkillName.saboteur]: [],\n    [SkillName.backup]: [],\n    [SkillName.hideaway]: [],\n    [SkillName.monk]: [\n        { stat: FightStat.COUNTER, value: 40, percent: true },\n        { stat: FightStat.INITIATIVE, value: -200 },\n        { stat: FightStat.HIT_SPEED, value: -100, percent: true },\n    ],\n    [SkillName.vampirism]: [],\n    [SkillName.chaining]: [],\n    [SkillName.haste]: [],\n    [SkillName.treat]: [],\n    [SkillName.repulse]: [\n        { stat: FightStat.DEFLECT, value: 30, percent: true },\n    ],\n};\nvar FIGHTS_PER_DAY = 6;\nvar ARENA_OPPONENTS_COUNT = 6;\nvar ARENA_OPPONENTS_MAX_GAP = 2;\nvar BRUTE_STARTING_POINTS = 11;\nvar PERKS_TOTAL_ODDS = WEAPONS_TOTAL_ODDS + PETS_TOTAL_ODDS + SKILLS_TOTAL_ODDS;\nvar SHIELD_BLOCK_ODDS = 0.45;\nvar NO_WEAPON_TOSS = 10;\nvar Animations = [\n    'arrive', 'attack', 'block', 'death', 'drink', 'eat',\n    'equip', 'evade', 'grab', 'grabbed', 'hit', 'hit-0', 'hit-1', 'hit-2',\n    'idle', 'launch', 'monk', 'prepare-throw', 'run',\n    'stolen', 'steal', 'strengthen', 'throw', 'train', 'train2', 'trapped',\n    'trash', 'win', ...WeaponAnimations,\n];\nvar BruteRankings = [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0];\nvar GLOBAL_TOURNAMENT_START_HOUR = 6;\nvar PERK_ODDS = [\n    { name: 'pet', odds: PETS_TOTAL_ODDS },\n    { name: 'skill', odds: SKILLS_TOTAL_ODDS },\n    { name: 'weapon', odds: WEAPONS_TOTAL_ODDS },\n];\nvar NEW_BRUTE_BASE_COST = 500;\nvar FIGHTER_HEIGHT = {\n    brute: 80,\n    [PetName.bear]: 130,\n    [PetName.panther]: 60,\n    dog: 40,\n};\nvar FIGHTER_WIDTH = {\n    brute: 50,\n    [PetName.bear]: 100,\n    [PetName.panther]: 80,\n    dog: 60,\n};\nvar FIGHTER_HIT_ANCHOR = {\n    brute: { x: 5, y: 40 },\n    [PetName.bear]: { x: 60, y: 100 },\n    [PetName.panther]: { x: 45, y: 45 },\n    dog: { x: 30, y: 30 },\n};\nvar MAX_FAVORITE_BRUTES = 3;\nvar BASE_FIGHTER_STATS = {\n    reversal: 0,\n    evasion: 0.1,\n    dexterity: 0.2,\n    block: -0.25,\n    accuracy: 0,\n    disarm: 0.05,\n    combo: 0,\n    deflect: 0,\n    tempo: 1.2,\n};\nvar BARE_HANDS_DAMAGE = 5;\nvar RESET_PRICE = 100;\nvar CLAN_SIZE_LIMIT = 50;\nvar BOSS_XP_REWARD = 500;\nvar BOSS_GOLD_REWARD = 500;\nvar BruteDeletionReason;\n(function (BruteDeletionReason) {\n    BruteDeletionReason[\"DUPLICATE_NAME\"] = \"DUPLICATE_NAME\";\n    BruteDeletionReason[\"INNAPROPRIATE_NAME\"] = \"INNAPROPRIATE_NAME\";\n    BruteDeletionReason[\"BANNED_USER\"] = \"BANNED_USER\";\n    BruteDeletionReason[\"EVENT_LOSS\"] = \"EVENT_LOSS\";\n})(BruteDeletionReason || (/*exports.*/BruteDeletionReason = BruteDeletionReason = {}));\nvar DailyModifierOdds = [\n    { modifier: FightModifier.noThrows, odds: 1 },\n    { modifier: FightModifier.focusOpponent, odds: 1 },\n    { modifier: FightModifier.alwaysUseSupers, odds: 1 },\n    { modifier: FightModifier.drawEveryWeapon, odds: 1 },\n    { modifier: FightModifier.doubleAgility, odds: 1 },\n    { modifier: FightModifier.randomSkill, odds: 1 },\n    { modifier: FightModifier.randomWeapon, odds: 1 },\n    { modifier: FightModifier.bareHandsFirstHit, odds: 1 },\n    { modifier: FightModifier.startWithWeapon, odds: 1 },\n];\nvar DailyModifierCountOdds = [\n    { count: 1, odds: 50 },\n    { count: 2, odds: 25 },\n    { count: 3, odds: 15 },\n    { count: 4, odds: 10 },\n];\nvar DailyModifierSpawnChance = 4 / 30;\nvar BanReason;\n(function (BanReason) {\n    BanReason[\"INNAPROPRIATE_NAME\"] = \"innapropriateName\";\n    BanReason[\"INNAPROPRIATE_BRUTE_NAME\"] = \"innapropriateBruteName\";\n    BanReason[\"MULTIPLE_ACCOUNTS\"] = \"multipleAccounts\";\n})(BanReason || (/*exports.*/BanReason = BanReason = {}));\nvar FightLogTemplateCount = 48;\nvar ClanWarMaxParticipants = 7;\nvar ClanWarPointReward = 1000;\nvar EventPauseDuration = 3;\nvar EventFightsPerDay = 10;\nvar EventFreeResets = 3;\nvar BossName = /*exports.*//*$Enums.*/BossName = {\n  GoldClaw: 'GoldClaw',\n  EmberFang: 'EmberFang'\n};\n\"use strict\"\n\nvar ServerState = proxy;\nvar updateAchievement = proxy;\nvar getTempSkill = proxy\nvar getTempWeapon = proxy\n\nvar TEAM1 = []\nvar TEAM2 = []\n\n\nfunction genfight(nb=10000){if(nb==0){cl(Date.now()-d ,bilan,((bilan[\"Undefeated\"] || 0)/100000 * 100)+\"%\");return}\ngenerateFight({\n  prisma: proxy,\n  team1: {brutes:[b1]},\n  team2: {brutes:[b2]},\n  modifiers: [],\n  backups: false,\n  achievements: false,\n  tournament: false,\n  clanId: 123,\n  clanWar: false\n}).then(function(e){bilan[e.data.winner]=(bilan[e.data.winner] || 0)+1;genfight(nb-1)});\n}\n\n\n  self.onmessage = function(e) {\n    var num = e.data;\n    var result = num * num;\n    self.postMessage(result);\n  };";